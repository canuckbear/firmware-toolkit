This log file has been generated on {{ ansible_date_time.date }} {{ ansible_date_time.time }} during deployment of role {{ role_name }} to host {{ ansible_host }}

Ansible internal variables inventory defined values
(please check Ansible documentation for default value of undefined variables)

#
# section : Magic
#
# These variables cannot be set directly by the user; Ansible will always override them to reflect internal state.
#
{% if ansible_check_mode is defined %}
ansible_check_mode : {{ ansible_check_mode }}
    hint : Boolean that indicates if we are in check mode or not
{% else %}
# ansible_check_mode is not defined
{% endif %}
{% if ansible_dependent_role_names is defined %}
ansible_dependent_role_names : {{ ansible_dependent_role_names }}
    hint : The names of the roles currently imported into the current play as dependencies of other plays
{% else %}
# ansible_dependent_role_names is not defined
{% endif %}
{% if ansible_diff_mode is defined %}
ansible_diff_mode : {{ ansible_diff_mode }}
    hint : Boolean that indicates if we are in diff mode or not
{% else %}
# ansible_diff_mode is not defined
{% endif %}
{% if ansible_forks is defined %}
ansible_forks : {{ ansible_forks }}
    hint : Integer reflecting the number of maximum forks available to this run
{% else %}
# ansible_forks is not defined
{% endif %}
{% if ansible_inventory_sources is defined %}
ansible_inventory_sources : {{ ansible_inventory_sources }}
    hint : List of sources used as inventory
{% else %}
# ansible_inventory_sources is not defined
{% endif %}
{% if ansible_limit is defined %}
 ansible_limit : {{ ansible_limit  }}
    hint : Contents of the --limit CLI option for the current execution of Ansible
{% else %}
# ansible_limit is not defined
{% endif %}
{% if ansible_loop is defined %}
ansible_loop : {{ ansible_loop }}
    hint : A dictionary/map containing extended loop information when enabled via loop_control.extended
{% else %}
# ansible_loop is not defined
{% endif %}
{% if ansible_loop_var is defined %}
ansible_loop_var : {{ ansible_loop_var }}
    hint : The name of the value provided to loop_control.ansible_loop_var Added in 2.8
{% else %}
# ansible_loop_var is not defined
{% endif %}
{% if ansible_index_var is defined %}
ansible_index_var : {{ ansible_index_var }}
    hint : The name of the value provided to loop_control.ansible_index_var Added in 2.9
{% else %}
# ansible_index_var is not defined
{% endif %}
{% if ansible_parent_role_names is defined %}
ansible_parent_role_names : {{ ansible_parent_role_names }}
#
    hint : When the current role is being executed by means of an include_role or import_role action, this variable contains a list of all parent roles, with the most
#
# 		recent role (i.e. the role that included/imported this role) being the first item in the list. When multiple inclusions occur, this list lists the last role
#			(i.e. the role that included this role) as the first item in the list. It is also possible that a specific role exists more than once in this list.
#
#     For example: When role A includes role B, inside role B, ansible_parent_role_names will equal to ['A']. If role B then includes role C, the list
#			becomes ['B', 'A'].
{% else %}
# ansible_parent_role_names is not defined
{% endif %}
{% if ansible_parent_role_paths is defined %}
# ansible_parent_role_paths : {{ ansible_parent_role_paths }}
#     When the current role is being executed by means of an include_role or import_role action, this variable contains a list of all parent roles, with the most
# 		recent role (i.e. the role that included/imported this role) being the first item in the list. Please refer to ansible_parent_role_names for the order of
# 		items in this list.
{% else %}
# ansible_parent_role_paths is not defined
{% endif %}
{% if ansible_play_batch is defined %}
ansible_play_batch : {{ ansible_play_batch }}
    hint : List of active hosts in the current play run limited by the serial, aka ‘batch’. Failed/Unreachable hosts are not considered ‘active’.
{% else %}
# ansible_play_batch is not defined
{% endif %}
{% if ansible_play_hosts is defined %}
ansible_play_hosts : {{ ansible_play_hosts }}
{% else %}
    hint : ansible_play_hosts is not defined
{% endif %}
#     The same as ansible_play_batch
{% if ansible_play_hosts_all is defined %}
 ansible_play_hosts_all : {{ ansible_play_hosts_all }}
    hint : List of all the hosts that were targeted by the play
{% else %}
# ansible_play_hosts_all is not defined
{% endif %}
{% if ansible_play_role_names is defined %}
ansible_play_role_names : {{ ansible_play_role_names }}
    hint : The names of the roles currently imported into the current play. This list does not contain the role names that are implicitly included via dependencies.
{% else %}
# ansible_play_role_names is not defined
{% endif %}
{% if ansible_playbook_python is defined %}
ansible_playbook_python : {{ ansible_playbook_python }}
    hint : The path to the python interpreter being used by Ansible on the controller
{% else %}
# ansible_playbook_python is not defined
{% endif %}
{% if ansible_role_names is defined %}
ansible_role_names : {{ ansible_role_names }}
{% else %}
    hint : ansible_role_names is not defined
{% endif %}
#     The names of the roles currently imported into the current play, or roles referenced as dependencies of the roles imported into the current play.
{% if ansible_run_tags is defined %}
ansible_run_tags : {{ ansible_run_tags }}
    hint : Contents of the --tags CLI option, which specifies which tags will be included for the current run.
{% else %}
# ansible_run_tags is not defined
{% endif %}
{% if ansible_search_path is defined %}
ansible_search_path : {{ ansible_search_path }}
    hint : Current search path for action plugins and lookups, i.e where we search for relative paths when you do template: src=myfile
{% else %}
# ansible_search_path is not defined
{% endif %}
{% if ansible_skip_tags is defined %}
ansible_skip_tags : {{ ansible_skip_tags }}
    hint : Contents of the --skip_tags CLI option, which specifies which tags will be skipped for the current run.
{% else %}
# ansible_skip_tags is not defined
{% endif %}
{% if ansible_verbosity is defined %}
ansible_verbosity : {{ ansible_verbosity }}
    hint : Current verbosity setting for Ansible
{% else %}
# ansible_verbosity is not defined
{% endif %}
{% if ansible_version is defined %}
ansible_version : {{ ansible_version }}
    hint : Dictionary/map that contains information about the current running version of ansible, it has the following keys: full, major, minor, revision and string.
{% else %}
# ansible_version is not defined
{% endif %}
{% if group_names is defined %}
group_names : {{ group_names }}
    hint : List of groups the current host is part of
{% else %}
# ansible_group_names is not defined
{% endif %}
{% if groups is defined %}
groups : {{ groups }}
    hint : A dictionary/map with all the groups in inventory and each group has the list of hosts that belong to it
{% else %}
# ansible_groups is not defined
{% endif %}
{% if hostvars is defined %}
hostvars : {{ hostvars }}
    hint : A dictionary/map with all the hosts in inventory and variables assigned to them
{% else %}
# hostvars is not defined
{% endif %}
{% if inventory_hostname is defined %}
inventory_hostname : {{ inventory_hostname }}
    hint : The inventory name for the ‘current’ host being iterated over in the play
{% else %}
# inventory_hostname is not defined
{% endif %}
{% if inventory_hostname_short is defined %}
inventory_hostname_short : {{ inventory_hostname_short }}
    hint : The short version of inventory_hostname
{% else %}
# inventory_hostname_short is not defined
{% endif %}
{% if inventory_dir is defined %}
inventory_dir : {{ inventory_dir }}
    hint : The directory of the inventory source in which the inventory_hostname was first defined
{% else %}
# inventory_dir is not defined
{% endif %}
{% if inventory_file is defined %}
inventory_file : {{ inventory_file }}
    hint : The file name of the inventory source in which the inventory_hostname was first defined
{% else %}
# inventory_file is not defined
{% endif %}
{% if omit is defined %}
omit : {{ omit }}
    hint : Special variable that allows you to ‘omit’ an option in a task, i.e - user: name=bob home={{ bobs_home|default(omit) }}
{% else %}
# omit is not defined
{% endif %}
{% if play_hosts is defined %}
play_hosts : {{ play_hosts }}
    hint : Deprecated, the same as ansible_play_batch
{% else %}
# play_hosts is not defined
{% endif %}
{% if ansible_play_name is defined %}
ansible_play_name : {{ ansible_play_name }}
    hint : The name of the currently executed play. Added in 2.8.
{% else %}
# ansible_play_name is not defined
{% endif %}
{% if playbook_dir is defined %}
playbook_dir : {{ playbook_dir }}
    hint : The path to the directory of the playbook that was passed to the ansible-playbook command line.
{% else %}
# ansible_playbook_dir is not defined
{% endif %}
{% if role_name is defined %}
role_name : {{ role_name }}
    hint : The name of the role currently being executed.
{% else %}
# role_name is not defined
{% endif %}
{% if role_names is defined %}
role_names : {{ role_names }}
    hint : Deprecated, the same as ansible_play_role_names
{% else %}
# role_names is not defined
{% endif %}
{% if role_path is defined %}
role_path : {{ role_path }}
    hint : The path to the dir of the currently running role
{% else %}
# role_path is not defined
{% endif %}
#
# section : Facts
#
# These are variables that contain information pertinent to the current host (inventory_hostname). They are only available if gathered first.
#
{% if ansible_facts is defined %}
ansible_facts : {{ ansible_facts }}
    hint : Contains any facts gathered or cached for the inventory_hostname Facts are normally gathered by the setup module automatically in a play, but any module can
# return facts.
{% else %}
# ansible_facts is not defined
{% endif %}
{% if ansible_local is defined %}
ansible_local : {{ ansible_local }}
    hint : Contains any ‘local facts’ gathered or cached for the inventory_hostname. The keys available depend on the custom facts created. See the setup module for more
# details.
{% else %}
# ansible_local is not defined
{% endif %}

#
# section : Connection variables
#
# Connection variables are normally used to set the specifics on how to execute actions on a target. Most of them correspond to connection plugins, but not all
# are specific to them; other plugins like shell, terminal and become are normally involved. Only the common ones are described as each
# connection/become/shell/etc plugin
# can define its own overrides and specific variables. See Controlling how Ansible behaves: precedence rules for how
# connection variables interact with configuration # settings, command-line options, and playbook keywords.
#
{% if ansible_become_user is defined %}
ansible_become_user : {{ ansible_become_user }}
    hint : The user Ansible ‘becomes’ after using privilege escalation. This must be available to the ‘login user’.
{% else %}
# ansible_become_user is not defined
{% endif %}
{% if ansible_connection is defined %}
ansible_connection : {{ ansible_connection }}
    hint : The connection plugin actually used for the task on the target host.
{% else %}
# ansible_connection is not defined
{% endif %}
{% if ansible_host is defined %}
ansible_host : {{ ansible_host }}
    hint : The ip/name of the target host to use instead of inventory_hostname.
{% else %}
# ansible_host is not defined
{% endif %}
{% if ansible_python_interpreter is defined %}
ansible_python_interpreter : {{ ansible_python_interpreter }}
    hint : The path to the Python executable Ansible should use on the target host.
{% else %}
# ansible_python_interpreter is not defined
{% endif %}
{% if ansible_user is defined %}
ansible_user : {{ ansible_user }}
{% else %}
# ansible_user is not defined
{% endif %}
