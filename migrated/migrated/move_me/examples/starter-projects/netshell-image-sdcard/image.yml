#
# The contents of this file are subject to the Apache 2.0 license you may not
# use this file except in compliance with the License.
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
#
# Copyright 2016 DFT project (http://www.debianfirmwaretoolkit.org).
# All rights reserved. Use is subject to license terms.
#
# Debian Firmware Toolkit is the new name of Linux Firmware From Scratch
# Copyright 2014 LFFS project (http://www.linuxfirmwarefromscratch.org).
#
#
# Contributors list :
#
#    William Bonnet     wllmbnnt@gmail.com, wbonnet@theitmakers.com
#
#

# ----------------------------------------------------------------------------
#
# Definition of the devices to create. Each device is an image of storage
# block device. The following dictionnaries define a list a device, each
# contains a list of partitions.
#
# Special devices and file systems (such as tmpfs) are not defined inside the
# devices tree structure since they are associated to a physical devices.
# Their definition can be found under the filesystems entry (see below)
#
# ----------------------------------------------------------------------------
devices:
  # Defines the size of the device to create. The size value is numerical
  size: "2"

  # Defines the unit used for size. Valid values are :
  # "s" (sectors), "B" (bytes),  "kB",  "MB",  "MiB", "GB",  "GiB",  "TB",  "TiB"
  #
  # Default value is MB
  unit: "GB"

  # Defines the method used fill the empty image file after its creation.
  # Valid values are :
  # . zero    : image is filed with zeros
  # . random  : image is filed with data read from /dev/random)
  # . pattern : the image is filed with repetition of the given pattern (encoded in base64 ?)
  #
  # This attribute is optional, default value is zero
  fill_method: "zero"

  # Defines the filename used to store the device image. This file is created and allocated at
  # image creation.
  filename: "netshell.img"

  # Defines which kind of partition table label is used. Valid values are :
  # "aix", "amiga", "bsd", "dvh", "gpt", "loop", "mac", "msdos", "pc98", or "sun"
  label: "dos"

  # Defines which alignement ype is used for newly created partitions. Valid vaues ares :
  #  . none       Use the minimum alignment allowed by the disk type.
  #  . cylinder   Align partitions to cylinders.
  #  . minimal    Use minimum alignment as given by the disk topology information.
  #  . optimal    Use  optimum  alignment  as  given by the disk topology information.
  alignment: "optimal"

  # Defines the list of partitions to create inside the device
  partitions:
    - {
        # Name or label of the partition. Supported only by dos, gpt and pc98 tables.
        name: "name" ,

        # Defines the partition type. Valid values are "primary", "logical", or "extended"
        type: "primary" ,

        # Defines the size of the partition to create. The size value is numerical
        size: "8" ,

        # Defines the unit used for size. Valid values are :
        # "s" (sectors), "B" (bytes),  "kB",  "MB",  "MiB", "GB",  "GiB",  "TB",  "TiB",
        # "%" (percentage of device size)
        unit: "GB" ,

        # Frst sector of the partition
        sector_start: "2048" ,

        # Toggle the given set of flags on the partition
        # flag: "" ,

        # Should the partition be formatted. Default value is False
        format: True ,

        # Type of the file system to create
        filesystem_type: ""
      }



# ----------------------------------------------------------------------------
#
# Definition of the fileystems to be used in the rootfs. The filesystems
# section defines information wider than the scope of the image itself and its
# partitionning.
#
# File systems includes the definition of the special filesystems like tmpfs,
# and may defines mount point from partition which are not included in the
# image. For instance, the physical target can have a SSD disk attached to it.
# The image itsef would only define the partitioning of the SD card used to
# boot the target. Filesystems could also include infoormation about
# partitions of the SSD disk.
#
# ----------------------------------------------------------------------------
filesystems:
  # Definition of the root file system
  - {
      filesystem: "/dev/mmcblk1p1" ,
      mountpoint: "/" ,
      type: "ext4" ,
      options: "discard,noatime,nodiratime,errors=remount-ro" ,
      dump: "0" ,
      pass: "1"
    }
  # Definition of the tmp file system created in ram (tmpfs)
  - {
      filesystem: "tmpfs" ,
      mountpoint: "/tmp" ,
      type: "tmpfs" ,
      options: "noatime,nodiratime,nosuid" ,
      dump: "0" ,
      pass: "0"
    }
