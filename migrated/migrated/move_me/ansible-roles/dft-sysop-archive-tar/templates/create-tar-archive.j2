#!/usr/bin/env bash
#
# The contents of this file are subject to the Apache 2.0 license you may not
# use this file except in compliance with the License.
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
#
# Copyright 2020 DFT project (http://www.firmwaretoolkit.org).
# All rights reserved. Use is subject to license terms.
#
#
# Contributors list :
#
#    William Bonnet     wllmbnnt@gmail.com, wbonnet@theitmakers.com
#
#

#
# This script has been generated using the template provided by dft-sysop-archive role. its
# function is to create a tar archive using given source path (the data to archive), target
# (produced file) and cli options.

# Stop a first error
set -ex

# Redirect script to log file
exec 1> /var/log/create-tar-archive.log 2>&1

#set -x

# Defines the timestamp filenam suffix format
{% if item.timestamp_format is defined %}
TIMESTAMP_FORMAT={{ item.timestamp_format }}
{% else %}
TIMESTAMP_FORMAT="%Y%m%d"
{% endif %}
TIMESTAMP=$(date +${TIMESTAMP_FORMAT})

# Defines the backup target directory
{% if item.archive_path is defined %}
ARCHIVE_DIR="{{ item.archive_path }}"
{% else %}
ARCHIVE_DIR=/var/backups
{% endif %}

# Defines the archive file basename
{% if item.archive_basename is defined %}
ARCHIVE_NAME="{{ item.archive_basename }}"
{% else %}
ARCHIVE_NAME="{{ item.name }}"
{% endif %}

# Defines the archive file suffix
{% if item.archive_suffix is defined %}
ARCHIVE_SUFFIX="{{ item.archive_suffix }}"
{% endif %}

# Concatenate path element to get full archive path
ARCHIVE_NAME="${ARCHIVE_DIR}/${ARCHIVE_NAME}.${ARCHIVE_SUFFIX}"
{% if item.append_timestamp %}
ARCHIVE_NAME="${ARCHIVE_NAME}-${TIMESTAMP}"
{% endif %}
ARCHIVE_NAME="${ARCHIVE_NAME}.${ARCHIVE_SUFFIX}"

# Check that target directory exist, if not try to create it
if [ ! -d "${ARCHIVE_DIR}" ] ;
then
  mkdir -p "${ARCHIVE_DIR}"
fi

# Defines the tar command options
{% if item.tar_options is defined and item.tar_options != "" %}
TAR_OPTIONS="{{ item.tar_options }}"
{% else %}
TAR_OPTIONS="cf"
{% endif %}
TAR_CONTENT=""
{% for content in item.archive_content %}
TAR_CONTENT="${TAR_CONTENT} {{ content.path }}"
{% endfor %}
tar ${TAR_OPTIONS} "${ARCHIVE_NAME}" ${TAR_CONTENT}
