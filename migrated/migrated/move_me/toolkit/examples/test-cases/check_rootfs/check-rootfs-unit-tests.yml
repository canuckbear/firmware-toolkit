#
# The contents of this file are subject to the Apache 2.0 license you may not
# use this file except in compliance with the License.
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
#
# Copyright 2016 DFT project (http://www.debianfirmwaretoolkit.org).  
# All rights reserved. Use is subject to license terms.
#
# Debian Firmware Toolkit is the new name of Linux Firmware From Scratch
# Copyright 2014 LFFS project (http://www.linuxfirmwarefromscratch.org).  
#
#
# Contributors list :
#
#    William Bonnet     wllmbnnt@gmail.com, wbonnet@theitmakers.com
#
#

#
# The following packages definition are provided as an example of how to use 
# use packages restriction check, and are also used as one of the dft tool 
# test case
#
packages:
  #
  # Mandatory packages
  #
  mandatory:
    # This package exist and is installed 
    - name: "base-files"
      # Test is supposed to succeed
      expected-result: True
    # This package does not exist and should generate an error 
    - name: "missing-non-existent-package"
      # Test is supposed to fail
      expected-result: False
    # This package has to be installed with a constraint on minimum version 
    - name: "vim-tiny"
      min-version: "2:7.0"
      # Test is supposed to succeed
      expected-result: True
    # This package has to be installed with a constraint on maximum version
    - name: "vim-tiny"
      max-version: "2:9.0"
      # Test is supposed to succeed
      expected-result: True
    # This package has to be installed with a constraint on minimum version
    - name: "vim-tiny"
      max-version: "2:7.0"
      # Test is supposed to fail
      expected-result: False
    # This package has to be installed with a constraint on maximum version
    - name: "vim-tiny"
      min-version: "2:9.0"
      # Test is supposed to succeed
      expected-result: False
    # This package has to be installed with a given version 
    - name: "vim-common"
      allowed-version: "2:8.0.0134-1"
      # Test is supposed to succeed
      expected-result: True
    # This package has to be installed with a given version 
    - name: "vim-common"
      allowed-version: 
        - "2:8.0.0022-1"
        - "2:8.0.0134-1"
      # Test is supposed to succeed
      expected-result: True
    # This package has to be installed with a given version
    - name: "vim-common"
      allowed-version: "2:9.0"
      # Test is supposed to fail
      expected-result: False
  #
  # Forbidden packages
  #
  forbidden:
    # This package exist and is installed, thus it will output an error
    - name: "base-files"
      # Test is supposed to fail
      expected-result: False
    # This package does exist and of course is not installed
    - name: "non-installed-package"
      # Test is supposed to succeed
      expected-result: True
  #
  # Allowed packages
  #
  allowed:
    # This package is allowed and installed
    - name: "vim-tiny"
      # Test is supposed to succeed
      expected-result: True
      # This package is allowed and not installed
      # Test is supposed to succeed
      expected-result: True
    # This package is allowed and has a constraint on version
    - name: "vim-common"
      min-version: "2:7.0"
      # Test is supposed to succeed
      expected-result: True
    # This package is allowed and has a constraint on version
    - name: "vim-common"
      max-version: "2:9.0"
      # Test is supposed to succeed
      expected-result: True
    # This package is allowed and has a constraint on version
    - name: "vim-comon"
      max-version: "2:7.0"
      # Test is supposed to fail
      expected-result: False
    # This package is allowed and has a constraint on version
    - name: "vim-common"
      min-version: "2:9.0"
      # Test is supposed to fail
      expected-result: False
    # This package is allowed and has several constraints on version
    - name: "vim-common"
      min-version: "2:7.0"
      max-version: "2:9.0"
      # Test is supposed to succeed
      expected-result: True
    # This package is allowed and has several constraints on version
    - name: "vim-common"
      min-version: "9"
      max-version: "7"
      # Test is supposed to fail
      expected-result: False
    # This package is allowed and has constraints on given versions, it
    # should succeed. But it may fails depending on the Debian version
    # you use ;) just change versions
    - name: "vim-common"
      allowed-version: 
        - "2:8.0.0134-1"
        - "2:8.0.0022-1"
      # Test is supposed to succeed
      expected-result: True
    # This package is allowed and has constraints on given blacklisted
    # versions, it should succeed.
    - name: "vim-common"
      blacklisted-version: 
        - "2:9.0.0134-1"
        - "2:9.0.0022-1"
      # Test is supposed to succeed
      expected-result: True
    # This package is allowed and has constraints on given blacklisted
    # versions, it should fail.
    - name: "vim-common"
      blacklisted-version: 
        - "2:9.0.0134-1"
        - "2:9.0.0022-1"
      # Test is supposed to fail
      expected-result: False
    # This package is allowed and has constraints on blacklisted arch,
    # it should succeed
    - name: "vim-common"
      blacklisted-arch:
        - "arm64"
      # Test is supposed to succeed
      expected-result: True
    # This package is allowed and has several constraints on blacklisted 
    # arch, it should succeed
    - name: "vim-common"
      blacklisted-arch:
        - "arm64"
        - "armhf"
        - "armel"
      # Test is supposed to succeed
      expected-result: True
    # This package is allowed and has constraints on blacklisted arch,
    # it should fail
    - name: "vim-common"
      blacklisted-arch:
        - "all"
      # Test is supposed to fail
      expected-result: False
    # This package is allowed and has several constraints on blacklisted
    # arch, it should fail
    - name: "vim-common"
      blacklisted-arch:
        - "amd64"
        - "all"
        - "arm64"
      # Test is supposed to fail
      expected-result: False
    # This package is allowed on several arch but not amd64 it should fail 
    - name: "base-files"
      allowed-arch:
        - "all"
        - "armhf"
      # Test is supposed to fail
      expected-result: False
    # This package is allowed on amd64 it should succeed
    - name: "base-files"
      allowed-arch:
        - "amd64"
        - "armhf"
      # Test is supposed to succeed
      expected-result: True
# TODO handle regex on versions
#
# The following section defines the list of files and their restriction.
#
files:
  #
  # MAndatory objects
  #
  mandatory:
    #
    # Files
    #
    # Mandatory single file
  - path: "/etc/fstab"
    # Object with an unknow type
  - path: "/var/"
    type: "unknown"
    # Mandatory non existing file
  - path: "/missing-non-existent-file"
    # Mandatory file but it is a directory
  - path: "/etc/"
    type: "file"
    # Mandatory single but it is a symlink
  - path: "/var/lock"
    type: "file"
    # File with valid type owner group and mask
  - path: "/etc/passwd"
    type: "file"
    owner: "root"
    group: "root"
    mask: "0644"
    # File with no type and with valid type owner group and mask
  - path: "/etc/passwd"
    owner: "root"
    group: "root"
    mask: "0644"
    # This definition will produce an error on file attributes
  - path: "/etc/passwd"
    owner: "root"
    group: "root"
    mask: "0666"
    # This definition will produce an error on group
  - path: "/etc/passwd"
    owner: "root"
    group: "staff"
    mask: "0640"
    # This definition will produce an error on owner
  - path: "/etc/passwd"
    owner: "dft"
    group: "root"
    mask: "0640"
    # This definition will produce an error on everything
  - path: "/etc/passwd"
    owner: "dft"
    group: "dftt"
    mask: "0666"
#TODO check for sticky bits etc/
    #
    # Directories
    #
    # Mandatory directory
  - path: "/etc/"
    type: "directory"
    # Unreadable missing object
  - path: "/root/unreadable-and does-not exist"
    type: "directory"
    # Unreadable existing object 
  - path: "/root/.aptitude"
    type: "directory"
    # Mandatory non existing directory
  - path: "/missing-non-existent-directory"
    type: "directory"
    # Mandatory directory, but it is a file
  - path: "/etc/fstab"
    type: "directory"
    # Mandatory directory, but it is a symlink
  - path: "/var/lock"
    type: "directory"
    # Directory with valid type owner group and mask
  - path: "/etc/network"
    type: "directory"
    owner: "root"
    group: "root"
    mask: "0644"
    # Directory with invalid type owner group and mask
  - path: "/lib"
    type: "directory"
    owner: "dft"
    group: "dft"
    mask: "0777"
    #
    # Symlinks
    #
    # Existing symlink without target nor type
  - path: "/etc/systemd/system/sshd.service"
    # Existing symlink without target
  - path: "/etc/systemd/system/sshd.service"
    type: "symlink"
    # Existing symlink with existing target
  - path: "/etc/systemd/system/sshd.service"
    type: "symlink"
    target: "/lib/systemd/system/ssh.service"
    # Existing symlink with missing target
  - path: "/etc/systemd/system/sshd.service"
    type: "symlink"
    target: "/lib/systemd/system/ssh.service.missing"
    # This test will succeed since the target does not exist and its forbidden
  - path: "/etc/systemd/system/sshd.service"
    type: "symlink"
    target: "/lib/systemd/system/ssh.service"
  # 
  # Forbidden objects
  #
  forbidden:
    #
    #
    #
    #
  - path: "/etc/hosts.equiv"
    # This file is mandatory also and wil produce a warning during parsing, then be ignored
  - path: "/tmp/both-mndatory-and-forbidden"
    # This file exist and wil produce an error
  - path: "/etc/debian_version"
    # This file does not exist but will produce warning on extra args
  - path: "/etc/passwd"
    owner: "root"
    group: "root"
    mask: "0640"
  - path: "/etc/do-no-exist3"
    type: "symlink"
    target: "/proc/self/mounts"
    # This test will succeed since the target does not exist and its forbidden
  - path: "/etc/mtab"
    type: "symlink"
    target: "/proc/self"
    # This test will fail since the source do exist
  - path: "/etc/mtab"
    type: "symlink"
    target: "/proc/self/mounts"
  allowed:
  - path: "/tmp/does-not-exist"
    owner: "root"
    group: "root"
    mask: "0640"
  - path: "/etc/hosts"
    owner: "root"
    group: "root"
    mask: "0644"
    # This test will fail since user group and masks are incorrect
  - path: "/etc/hostname"
    owner: "dft"
    group: "dft"
    mask: "0666"
  - path: "/tmp/does-not-exist-either"
    type: "directory"
    owner: "root"
    group: "root"
    mask: "0644"
  - path: "/etc/systemd"
    type: "directory"
    owner: "root"
    group: "root"
    mask: "0644"
    # This test will fail since owner, group and mask are incorrect
  - path: "/etc/sysctl.d"
    type: "directory"
    owner: "dft"
    group: "dft"
    mask: "0666"
  - path: "/etc/group"
    empty: False
  - path: "/etc/environment"
    empty: True
    # This test will fail since it is not empty
  - path: "/etc/gshadow"
    empty: True
    # This test will fail sinc the file should be empty
  - path: "/var/log/aptitude"
    empty: False
  - path: "/etc/mtab"
    type: "symlink"
    target: "/proc/self/mounts"
    # This test will fail since symlink does not exist
  - path: "/etc/mtab2"
    type: "symlink"
    target: "/proc/self/mounts"
    # This test will fail since target does not exist
  - path: "/etc/os-release"
    type: "symlink"
    target: "/tmp/does-not-exist"


# TODO : regexp for files and dirs
# TODO : should i check for multiple definitions ?
# TODO : contains ?
# TODO : add unit tests on sticky bit