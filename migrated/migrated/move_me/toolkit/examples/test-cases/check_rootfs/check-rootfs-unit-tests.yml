#
# The contents of this file are subject to the Apache 2.0 license you may not
# use this file except in compliance with the License.
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
#
# Copyright 2016 DFT project (http://www.debianfirmwaretoolkit.org).  
# All rights reserved. Use is subject to license terms.
#
# Debian Firmware Toolkit is the new name of Linux Firmware From Scratch
# Copyright 2014 LFFS project (http://www.linuxfirmwarefromscratch.org).  
#
#
# Contributors list :
#
#    William Bonnet     wllmbnnt@gmail.com, wbonnet@theitmakers.com
#
#

#
# The following packages definition are provided as an example of how to use 
# use packages restriction check, and are also used as one of the dft tool test case
#
packages:
  status: "mandatory"
    # This package exist and is installed 
  - name: "base-files"
    # This package does not exist and should generate an error 
  - name: "missing-non-existent-package"
    # This package is both mandatorry and forbidden, it should generate 
    # a warning during parsing and be ignored
  - name: "both-mndatory-and-forbidden"
  status: "forbidden"
    # This package does not exist, thus it cannot be installed
  - name: "base-files"
  - name: "missing-non-existent-package"
    # This package exist and is installed, thus it will output an error 
  - name: "base-files"
  - name: "vim"
    # The version is uselesss and should generate a warning during parsing
    min-version: "7"
  - name: "vim-doc"
    # The version is uselesss and should generate a warning during parsing
    max-version: "9"
  - name: "vim-common"
    # The version is uselesss and should generate a warning during parsing
    fixed-version: "2:8.0.0022-1"
    # This package is both mandatorry and forbidden, it should generate 
    # a warning during parsing and be ignored
  - name: "both-mandatory-and-forbidden"
  status: "allowed"
  - name: "vim"
    min-version: "7"
  - name: "vim-doc"
    max-version: "9"
  - name: "vim-common"
    min-version: "7"
    max-version: "9"
  - name: "vim-common"
    fixed-version: "2:8.0.0022-1"
  - name: "vim-common"
    fixed-version: "2:8.0.0022-1"
    max-version: "9"
  - name: "vim-common"
    fixed-version: "2:8.0.0022-1"
    min-version: "7"
    # Max version is smaller than max, it should generate a warning during parsing and be ignored
  - name: "vim-common"
    fixed-version: "2:8.0.0022-1"
    max-version: "7"
    # Min version is greater than fixed, it should generate a warning during parsing and be ignored
  - name: "vim-common"
    fixed-version: "2:8.0.0022-1"
    min-version: "9"
    # Min version is greater than max, it should generate a warning during parsing and be ignored
  - name: "vim-common"
    min-version: "9"
    max-version: "7"

ne pas oublier le blacklisted !  on peut avoir des versions precises interdites
fixed peut etre une liste
et todo leur mettre des regexp

#
# The following section defines the list of files and their restriction.
#
files:
  status: "mandatory"
  - path: "/etc/fstab"
  - path: "/etc/"
    type: "directory"
  - path: "/var/"
    type: "unknown"
  - path: "/etc/network"
    type: "directory"
    owner: "root"
    group: "root"
    mask: "0644"
  - path: "/lib"
    type: "directory"
    owner: "dft"
    group: "dft"
    mask: "0777"
  - path: "/etc/passwd"
    type: "file"
    owner: "root"
    group: "root"
    mask: "0644"
  - path: "/etc/passwd"
    owner: "root"
    group: "root"
    mask: "0640"
    # This definition will produce an error on file attributes
  - path: "/etc/passwd"
    owner: "root"
    group: "root"
    mask: "0666"
    # This definition will produce an error on group
  - path: "/etc/passwd"
    owner: "root"
    group: "staff"
    mask: "0640"
    # This definition will produce an error on owner
  - path: "/etc/passwd"
    owner: "root"
    group: "root"
    mask: "0640"
    # This definition will produce an error on everything
  - path: "/etc/passwd"
    owner: "root"
    group: "root"
    mask: "0640"
    # This file is forbidden also and wil produce a warning during parsing, then be ignored
  - path: "/tmp/both-mndatory-and-forbidden"
    # This test will fail since it does not exist
  - path: "/etc/do-no-exist4"
    type: "symlink"
    target: "/proc/self/mounts"
    this test will succeed since the target does not exist and its forbidden
  - path: "/etc/systemd/system/sshd.service"
    type: "symlink"
    target: "/lib/systemd/system/ssh.service"
  status: "forbidden"
  - path: "/etc/hosts.equiv"
    # This file is mandatory also and wil produce a warning during parsing, then be ignored
  - path: "/tmp/both-mndatory-and-forbidden"
    # This file exist and wil produce an error
  - path: "/etc/debian_version"
    # This file does not exist but will produce warning on extra args
  - path: "/etc/passwd"
    owner: "root"
    group: "root"
    mask: "0640"
  - path: "/etc/do-no-exist3"
    type: "symlink"
    target: "/proc/self/mounts"
    this test will succeed since the target does not exist and its forbidden
  - path: "/etc/mtab"
    type: "symlink"
    target: "/proc/self"
    # This test will fail since the source do exist
  - path: "/etc/mtab"
    type: "symlink"
    target: "/proc/self/mounts"
  status: "allowed"
  - path: "/tmp/does-not-exist"
    owner: "root"
    group: "root"
    mask: "0640"
  - path: "/etc/hosts"
    owner: "root"
    group: "root"
    mask: "0644"
    # This test will fail since user group and masks are incorrect
  - path: "/etc/hostname"
    owner: "dft"
    group: "dft"
    mask: "0666"
  - path: "/tmp/does-not-exist-either"
    type: "directory"
    owner: "root"
    group: "root"
    mask: "0644"
  - path: "/etc/systemd
    type: "directory"
    owner: "root"
    group: "root"
    mask: "0644"
    # This test will fail since owner, group and mask are incorrect
  - path: "/etc/sysctl.d"
    type: "directory"
    owner: "dft"
    group: "dft"
    mask: "0666"
  - path: "/etc/group"
    empty: False
  - path: "/etc/environment"
    empty: True
    # This test will fail since it is not empty
  - path: "/etc/gshadow"
    empty: True
    # This test will fail sinc the file should be empty
  - path: "/var/log/aptitude"
    empty: False
  - path: "/etc/mtab"
    type: "symlink"
    target: "/proc/self/mounts"
    # This test will fail since symlink does not exist
  - path: "/etc/mtab2"
    type: "symlink"
    target: "/proc/self/mounts"
    # This test will fail since target does not exist
  - path: "/etc/os-release"
    type: "symlink"
    target: "/tmp/does-not-exist"


# TODO : regexp for files and dirs
# TODO : should i check for multiple definitions ?
# TODO : contains ?
# TODO : add unit tests on sticky bit