#
# The contents of this file are subject to the Apache 2.0 license you may not
# use this file except in compliance with the License.
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
#
# Copyright 2016 DFT project (http://www.firmwaretoolkit.org).
# All rights reserved. Use is subject to license terms.
#
#
# Contributors list :
#
#    William Bonnet     wllmbnnt@gmail.com, wbonnet@theitmakers.com
#
#

# ----------------------------------------------------------------------------
#
# Definition of the content information that should be generated by the
# 'generate_content_information' command from the cli
#
#   There are several kinds of information :
#   . Packages information (package name, version and optionnaly status)
#   . Vulnerabilities information (list of CVE from debecan and DSA database)
#   . Security information, generated by openscan too
#   . Files information (list of file, size, fingerprints)
#   . Anti virus report (execution of a given anti virus for static analysis)
#
#   A dictionnaries named "configuration", controls the output parameters
#   such has format, file name, etc.
#

#
# The configuratio dictionnary describes the global behavior of the command.
# It contains parameters about output generation such as format, location, etc.
# It also defines what should be done when some tools are missing (debsecan or
# openscap apckages for instance)
#
configuration:
  # The security information generation are run in the chrooted environment.
  # Since the software can be missing, it may be needed to install the software
  # (debsecan). This flag control automatic installation. Default is yes
  # If the packages are installed, they are automatically removed at the end
  # of execution (unless already installed in the rootfs). Default is False
  install_missing_software: True

  # This variable contol the call to apt-get update before installing packages
  # into the rootfs (if activated). If the variable is set to True (default value),
  # then "apt-get update" is called before "apt-get install".
  #
  # If set to False the current catalog is used, no update is triggered
  update_catalog_before_install: False

  # In some case it is useful to skip a generation step if software is missing
  # and rootfs modification is not allowed. Setting this variable to True will
  # allow to skip this stage, False will cause the program to abort.
  # Default is True
  # skip-on-missing-software: True

  # The output dictionnary contains all the variable used to control
  output:
    # This variable control the format of the output. The format available are :
    # - csv
    # - json
    # - yaml
    # - xml
    #
    format: "csv"

    # The target can be either "stdout" or a "file". When using a file target,
    # the path variable must be defined. Files are stored under content in the
    # project working dir, unless the path is absolute (which means relative
    # path goes under working_dir/content)
    target: "file"

    # Defines the path under which the oututis stored. If path is relative,
    # output goes to content directeory in the project tree. If the path is
    # absolute, then the absolute path is used.
    #
    # Default value is empty, which means all the output goes under content/
    # path:

    # These three variables defines a prefix and suffix added to the filename,
    # and a replacement extension. The filename pattern is :
    # <prefix><content-type><suffix>.<format-extension>
    #
    # content-type is one of :
    # - packages
    # - vulnerabilities
    # - security
    # - anti-virus
    # - files
    #
    # default extension value is the formt, default suffix and prefix are empty
    filename_prefix: "prefix"
    filename_suffix: "suffix"
    relace_extension: "dummy"

    # Separtor is needed if the CSV file format is used. It defines the
    # character oused as field separator
    field_separator: ";"
#
# The packages dictionnary control the list of fields that are included in the
# output. Default tool used for package information generation is dpkg.
#
packages:
  # If this is set to True (default is True), package name will be included in
  # the information generated
  output_pkg_name: True

  # If this is set to True (default is True), package version will be included
  # in the information generated
  output_pkg_version: True

  # If this is set to True (default is False), package version will be included
  # in the information generated
  output_pkg_description: False

  # If this is set to True (default is False), package status will be included
  # in the information generated
  output_pkg_status: True

  # If this is set to True (default is False), package architecture will be
  # included inthe information generated
  output_pkg_architecture: False

  # If this is set to True (default is False), package md5sum (from catalog)
  # will be included inthe information generated
  output_pkg_md5: False

  # If this is set to True (default is False), package SHA256 (from catalog)
  # will be included inthe information generated
  output_pkg_sha256: False

  # If this is set to True (default is False), package size (from catalog)
  # will be included inthe information generated
  output_pkg_size: False

  # If this is set to True (default is False), package installed-size (from
  # catalog) will be included inthe information generated
  output_pkg_installed_size: False


#
# The vulnerabilities dictionnary controls what is included in the output.
# Default tool used for package information generation is debsecan.
#
vulnerabilities:
  generate: True

#
# The security dictionnary controls what is included in the output.
# Default tool used for package information generation is openscap.
#
security:
  generate: True

#
# The rootkit dictionnary controls what is included in the output.
# Default tool used for package information generation is rkhunter.
#
rootkit:
  generate: True

#
#
#
files:
  generate: True

#
# The antivirus section desfines the behavior of the antivirus. Current
# antivirus is clamav. In the future more software will be supported
#
antivirus:
  # If this is set to True (default is True), package name will be included
  # in the information generated
  generate: True

  # If this is set to True (default is True), the antivirus will be run from
  # the host; Otherwise it will be run from the target chroot (and installed
  # if necessary). If the antivirus is missing from the host it will NEVER be
  # installed automatically.
  use_host_av: True

  # This flag control the database update before execution. If set to True (its the
  # default value), then the antivirus update command is executed. If set to false
  # it is skipped)
  update_database: False
